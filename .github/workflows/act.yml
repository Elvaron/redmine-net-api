
name: "CI/CD"
on:
  push:
    branches:
      - "master"
  pull_request:
    branches: [ "master" ]


env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true

  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  
  # Project name to pack and publish
  PROJECT_NAME: redmine-net-api

  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/redmine-net-api/
  GITHUB_USER: zapadi
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}

  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.${{github.run_number}}

jobs:
  build:
    name: Build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    env:
      PUSH_PACKAGES: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}    
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.0
      with:
        lfs: true
        fetch-depth: 0
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.9.0
      with:
        dotnet-version: |
          3.1.x
          5.0.x
    
    # - name: "Install .NET Core SDK"
    #   uses: actions/setup-dotnet@v1.9.0

    - name: Restore
      run: dotnet restore
    
    - name: Build
      run: dotnet build -c Release --no-restore
    
    - name: Test
      run: dotnet test -c Release --no-build
    
    - name: Create Release NuGet package
      run: |
        arrTag=(${GITHUB_REF//\// })
        VERSION="${arrTag[2]}"
        VERSION="${VERSION//v}"
        dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -o nupkg src/$PROJECT_NAME/$PROJECT_NAME.*proj


    - name: Update robots.txt for Testing Site
      if: github.event_name == 'pull_request'
      run: |
        rm ./public/robots.txt
        echo $'User-agent: *\nDisallow: /' >> ./public/robots.txt

    - name: Notify Slack
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required

